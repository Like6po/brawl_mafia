from aiogram import types
from aiogram.dispatcher.filters import Command, AdminFilter
from aiogram.utils.markdown import hbold

from data.db_models import Chat
from filters import GroupFilter
from keyboards.inline.settings import settings_kb_show_to_admin
from loader import dp, db


@dp.message_handler(Command('settings'), GroupFilter(), AdminFilter())
async def settings1(message: types.Message):
    await message.delete()
    chat_id = message.chat.id
    chat_data: Chat = await db.get_chat(chat_id)
    await dp.bot.send_message(message.from_user.id,
                              f"–ö–∞–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±–µ—Å–µ–¥—ã –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å?\n\n"
                              f"{hbold('üïó –¢–∞–π–º–∏–Ω–≥–∏:')}\n"
                              f"–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {chat_data.register_time}\n"
                              f"–ù–æ—á—å: {chat_data.night_time}\n"
                              f"–î–µ–Ω—å: {chat_data.day_time}\n"
                              f"–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ: {chat_data.vote_time}\n"
                              f"–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ: {chat_data.accept_time}\n\n"
                              f"{hbold('ü§¨ –ú–æ–ª—á–∞–Ω–∫–∞:')}\n"
                              f"–ò–∑–≥–Ω–∞–Ω—ã–µ –≥–æ–≤–æ—Ä—è—Ç: {'–î–∞' if chat_data.is_dead_talk else '–ù–µ—Ç'}\n"
                              f"–ù–µ –∏–≥—Ä–∞—é—â–∏–µ –≥–æ–≤–æ—Ä—è—Ç: {'–î–∞' if chat_data.is_nonplayers_talk else '–ù–µ—Ç'}\n\n"
                              f"{hbold('üí¨ –û—Å—Ç–∞–ª—å–Ω–æ–µ')}\n"
                              f"–ü–∏–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {'–î–∞' if chat_data.is_pin_register else '–ù–µ—Ç'}\n"
                              f"–ë—É—Å—Ç–µ—Ä—ã: {'–î–∞' if chat_data.is_active_boosts else '–ù–µ—Ç'}\n"
                              f"–ü–æ–∫–∞–∑ —Ä–æ–ª–µ–π: {'–î–∞' if chat_data.is_show_dead_roles else '–ù–µ—Ç'}\n"
                              f"–¢–∞–π–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ: {'–î–∞' if chat_data.is_show_day_votes else '–ù–µ—Ç'}",
                              reply_markup=settings_kb_show_to_admin(chat_id))


@dp.message_handler(Command('settings'), GroupFilter())
async def settings2(message: types.Message):
    await message.delete()
    await message.answer(f"{message.from_user.get_mention()} —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —á–∞—Ç–∞!")
