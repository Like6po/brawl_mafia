import asyncio

from aiogram import types
from aiogram.dispatcher.filters import Command
from aiogram.utils.exceptions import ChatNotFound
from aiogram.utils.markdown import hcode, hbold

from data.db_models import User
from filters import GroupFilter
from keyboards.inline.profile import profile_kb

from loader import dp, db


@dp.message_handler(GroupFilter(), Command('profile'))
async def profile_conv(message: types.Message):
    user_data: User = await db.get_player(message.from_user.id)
    try:
        await dp.bot.send_message(message.from_user.id,
                                  f"{hcode(message.from_user.full_name)}\n\n"
                                  f"{hbold('üèÜ –ü–æ–±–µ–¥')}: {user_data.wins}\n"
                                  f"{hbold('üó° –ü–æ—Ä–∞–∂–µ–Ω–∏–π')}: {user_data.loses}\n"
                                  f"{hbold('üíé –ì–µ–º—ã')}: {user_data.money}\n\n"
                                  f"{hbold('üìÇ –î–æ–∫—É–º–µ–Ω—Ç—ã')}: {user_data.documents}\n"
                                  f"{hbold('üïµÔ∏è‚Äç‚ôÇÔ∏è –ê–∫—Ç–∏–≤–Ω–∞—è —Ä–æ–ª—å')}: {user_data.active_roles}",
                                  reply_markup=profile_kb())
    except ChatNotFound:
        temp_message = await message.reply(
            '–ß—Ç–æ–±—ã —è –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–µ—Ä–µ–ø–∏—Å–∫—É —Å–æ –º–Ω–æ–π –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '
            '"–°–¢–ê–†–¢", –∑–∞—Ç–µ–º –ø—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞.')
        await asyncio.sleep(5)
        await temp_message.delete()
    await message.delete()
