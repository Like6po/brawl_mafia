import re

from aiogram import types
from aiogram.dispatcher.filters.builtin import CommandStart, ChatTypeFilter
from data.game_models import Player
from keyboards.inline.callback_datas import start_callback
from keyboards.inline.help import help_kb
from keyboards.inline.start import start_kb
from loader import dp, Game, db


@dp.message_handler(CommandStart(deep_link=re.compile(r"-[\d]+")), ChatTypeFilter(types.ChatType.PRIVATE))
async def start_deep(message: types.Message):
    user = await db.get_player(message.from_user.id)
    result = Game.search_player(message.from_user.id)
    deep = message.get_args()
    if not result:
        chat_obj = Game.get_chat(int(deep.split(' ')[0]))
        if not chat_obj:
            return await message.answer('‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∏–≥—Ä–µ!')
        else:
            if chat_obj.phase is not 'starting':
                await message.answer('‚ùå –ò–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å!')
            else:
                if chat_obj.get_registered_player(message.from_user.id):
                    return await message.answer('‚ö†Ô∏è –í—ã —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å!')
                if len(chat_obj.registered) > 11:
                    return await message.answer('üë• –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤!')

                if user.active_roles > 0 and chat_obj.is_active_boosts:
                    await db.upd_user(message.from_user.id, active_role=-1)
                    chat_obj.register_player(Player(message.from_user.id,
                                                    user_name=message.from_user.full_name,
                                                    active_role=1))
                else:
                    chat_obj.register_player(Player(message.from_user.id,
                                                    user_name=message.from_user.full_name))
                # –ø–µ—Ä–µ–¥–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                chat_obj.is_new_player_join = True
                # –æ—Ç–≤–µ—á–∞–µ–º, —á—Ç–æ –∏–≥—Ä–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
                await message.answer('‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!')
                # –µ—Å–ª–∏ –∏–≥—Ä–æ–∫–æ–≤ 12 –∏–ª–∏ –±–æ–ª—å—à–µ
                if len(chat_obj.registered) >= 12:
                    # –¥–æ—Å—Ä–æ—á–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
                    chat_obj.register_is_end_ahead_of_time = True
    else:
        await message.answer('‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å –±–æ–ª–µ–µ —á–µ–º –≤ 1 –≥—Ä—É–ø–ø–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ!')


@dp.message_handler(CommandStart(), ChatTypeFilter(types.ChatType.PRIVATE))
async def start(message: types.Message):
    await message.answer('–ü—Ä–∏–≤–µ—Çü§ò! –Ø –±–æ—Ç-–≤–µ–¥—É—â–∏–π –∏–≥—Ä—ã –º–∞—Ñ–∏—èü§µüèª —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ Brawl Stars! '
                         '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –º–µ–Ω—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –±–µ—Å–µ–¥—É –∏ –≤—ã–¥–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ü§ñ!\n',
                         reply_markup=start_kb())


@dp.callback_query_handler(start_callback.filter(type='help'))
async def cbq_help(cbq: types.CallbackQuery):
    await cbq.message.edit_text('‚ÑπÔ∏è –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫!',
                                reply_markup=help_kb())
