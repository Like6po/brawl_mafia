import asyncio

from aiogram import types
from aiogram.utils.exceptions import RetryAfter
from aiogram.utils.markdown import hlink

from data.game_models import Kill
from keyboards.inline.game_process import kb_night_cop, kb_night_don, kb_night_doctor, kb_night_whore, \
    kb_night_homeless, kb_night_mafia, kb_voting_time_users, game_go_to_bot_kb

roles_dict_brawl = {'peace': 'üôé‚Äç‚ôÄÔ∏è –®–µ–ª–ª–∏',
                    'mafia': 'ü¶Ö –í–æ—Ä–æ–Ω',
                    'cop': 'üî´üïµÔ∏è –ö–æ–ª—å—Ç',
                    'doctor': 'üöëüë©üèº‚Äç‚öïÔ∏è –ü—ç–º',
                    'homeless': 'üçæ –ë–∞—Ä–ª–∏',
                    'whore': '‚òÇÔ∏èüíÉ –ü–∞–π–ø–µ—Ä',
                    'don': 'üêÉ –ë—É–ª–ª',
                    'suicide': 'üí£ –¢–∏–∫'}


def game_msg_text_role(role: str, mafia_list: list, don) -> str:
    if role not in ['mafia', 'don']:
        return f'üì¢ –í—ã - {roles_dict_brawl[role]}'
    else:
        text_team = ''
        if don:
            text_team += f'{hlink(don.name, f"tg://user?id={don.id}")} - {roles_dict_brawl[don.role]}'
        if mafia_list:
            for player in mafia_list:
                text_team += f'\n{hlink(player.name, f"tg://user?id={player.id}")} - {roles_dict_brawl[player.role]}'

        return f'üì¢ –í—ã - {roles_dict_brawl[role]}\n–ë–∞–Ω–¥–∞ –ë—É–ª–ª–∞:\n{text_team}'


async def mailing_roles_to_players(chat_obj, bot):
    for player in chat_obj.players:
        try:
            await bot.send_message(player.id,
                                   game_msg_text_role(player.role,
                                                      chat_obj.mafia,
                                                      chat_obj.don))
            print(f'[{chat_obj.id}] –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ [ID {player.id}, {player.name}, {player.role} ]')
        except RetryAfter as e:
            await asyncio.sleep(e.timeout)
        await asyncio.sleep(0.2)


async def mailing_night_messages_to_players(chat_obj, chat_id, bot):

    if chat_obj.cop and Kill() not in chat_obj.cop.effects:
        try:
            await bot.send_message(chat_obj.cop.id,
                                   '‚ùóÔ∏è –í–∞–º –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä!\n'
                                   '–ë–µ–∑–¥—É–º–Ω–æ –∏–∑–≥–Ω–∞—Ç—å üî´üëø –∏–∑ –ë—Ä–∞–≤–ª –°–∏—Ç–∏ –∏–ª–∏ —Ä–∞—Å—á–µ—Ç–ª–∏–≤–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å üëÅüîé?',
                                   reply_markup=kb_night_cop(chat_id))
            print(f"[{chat_obj.id}] –û—Ç–ø—Ä–∞–≤–∏–ª –Ω–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–ø—É [ ID {chat_obj.cop.id}, {chat_obj.cop.name} ]")
        except RetryAfter as e:
            await asyncio.sleep(e.timeout)
        await asyncio.sleep(0.1)

    if chat_obj.don and chat_obj.cop and Kill() not in chat_obj.cop.effects:
        try:
            await bot.send_message(chat_obj.don.id,
                                   '–í–∞–º –Ω—É–∂–Ω–æ –≤—ã—á–∏—Å–ª–∏—Ç—å üî´üïµÔ∏è –ö–æ–ª—å—Ç–∞!\n–ö–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–±–∏—Ç—å üìû –ø–æ —Å–≤–æ–∏–º —Å–≤—è–∑—è–º?',
                                   reply_markup=kb_night_don(chat_obj))
            print(f"[{chat_obj.id}] –û—Ç–ø—Ä–∞–≤–∏–ª –Ω–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–Ω—É [ ID {chat_obj.don.id}, {chat_obj.don.name} ]")
        except RetryAfter as e:
            await asyncio.sleep(e.timeout)
        await asyncio.sleep(0.1)

    if chat_obj.doctor and Kill() not in chat_obj.doctor.effects:
        try:
            await bot.send_message(chat_obj.doctor.id,
                                   'üöëüë©üèº‚Äç‚öïÔ∏è –í—ã –º–æ–∂–µ—Ç–µ —Å–ø–∞—Å—Ç–∏ –∫–æ–≥–æ-—Ç–æ –æ—Ç –∏–∑–≥–Ω–∞–Ω–∏—è, –Ω–æ –Ω—É–∂–Ω–æ —É–≥–∞–¥–∞—Ç—å, –∫–æ–≥–æ —Ö–æ—Ç—è—Ç –∏–∑–≥–Ω–∞—Ç—å üî´!'
                                   '\n–ö–æ–≥–æ –ø–æ–ø—ã—Ç–∞–µ—Ç–µ—Å—å —Å–ø–∞—Å—Ç–∏ üíº?',
                                   reply_markup=kb_night_doctor(chat_obj))
            print(f"[{chat_obj.id}] –û—Ç–ø—Ä–∞–≤–∏–ª –Ω–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–∫—Ç–æ—Ä—É [ ID {chat_obj.doctor.id}, {chat_obj.doctor.name} ]")
        except RetryAfter as e:
            await asyncio.sleep(e.timeout)
        await asyncio.sleep(0.1)

    if chat_obj.whore and Kill() not in chat_obj.whore.effects:
        try:
            await bot.send_message(chat_obj.whore.id,
                                   '‚òÇÔ∏èüíÉ –í—ã –º–æ–∂–µ—Ç–µ —É—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–º—É-—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω—É—é –Ω–æ—á—å, '
                                   '–æ—Ç –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–∏–¥–µ—Ç—Å—è –æ–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Ü–µ–ª—ã–µ —Å—É—Ç–∫–∏ üïë!\n'
                                   '–ö –∫–æ–º—É —Ö–æ—Ç–∏—Ç–µ –∑–∞—Å–∫–æ—á–∏—Ç—å üîú?',
                                   reply_markup=kb_night_whore(chat_obj))
            print(
                f"[{chat_obj.id}] –û—Ç–ø—Ä–∞–≤–∏–ª –Ω–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ª—é–±–æ–≤–Ω–∏—Ü—Ü–µ [ ID {chat_obj.whore.id}, {chat_obj.whore.name} ] ")
        except RetryAfter as e:
            await asyncio.sleep(e.timeout)
        await asyncio.sleep(0.1)

    if chat_obj.homeless and Kill() not in chat_obj.homeless.effects:
        try:
            await bot.send_message(chat_obj.homeless.id,
                                   'üçæ –í –≤–∞—à–µ–º –±–∞—Ä–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –±—É—Ç—ã–ª–∫–∏ –ø–∏–≤–∞!\n'
                                   '–£ –∫–æ–≥–æ —Å–ø—Ä–æ—Å–∏—Ç—å –ª–∏—à–Ω—é—é –±—É—Ç—ã–ª–∫—É?',
                                   reply_markup=kb_night_homeless(chat_obj))
            print(
                f"[{chat_obj.id}] –û—Ç–ø—Ä–∞–≤–∏–ª –Ω–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ–º–∂—É [ ID {chat_obj.homeless.id}, {chat_obj.homeless.name} ] ")
        except RetryAfter as e:
            await asyncio.sleep(e.timeout)
        await asyncio.sleep(0.1)

    # –µ—Å–ª–∏ –µ—Å—Ç—å –º–∞—Ñ–∏—è
    if chat_obj.mafia:
        for mafia in chat_obj.mafia:
            # –µ—Å–ª–∏ –º–∞—Ñ–∏–æ–∑–Ω–∏–∫ –Ω–µ —É–±–∏—Ç
            if Kill() not in mafia.effects:
                try:
                    await bot.send_message(mafia.id,
                                           'ü¶Ö –í—ã –Ω–∞ —Å—Ö–æ–¥–∫–µ –±–∞–Ω–¥—ã –ë—É–ª–ª–∞! '
                                           '–ö–æ–≥–æ –∏–∑ –∂–∏—Ç–µ–ª–µ–π –ë—Ä–∞–≤–ª –°–∏—Ç–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–µ–∑–∞–∫–æ–Ω–Ω–æ üî´ –∏–∑–≥–Ω–∞—Ç—å?',
                                           reply_markup=kb_night_mafia(chat_obj))
                    print(f"[{chat_obj.id}] –û—Ç–ø—Ä–∞–≤–∏–ª –Ω–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–∞—Ñ–∏–∏ [ ID {mafia.id}, {mafia.name} ] ")
                except RetryAfter as e:
                    await asyncio.sleep(e.timeout)
                await asyncio.sleep(0.1)

    if chat_obj.don and Kill() not in chat_obj.don.effects:
        try:
            await bot.send_message(chat_obj.don.id,
                                   'ü¶Ö –í—ã –Ω–∞ —Å—Ö–æ–¥–∫–µ –±–∞–Ω–¥—ã –ë—É–ª–ª–∞! '
                                   '–ö–æ–≥–æ –∏–∑ –∂–∏—Ç–µ–ª–µ–π –ë—Ä–∞–≤–ª –°–∏—Ç–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–µ–∑–∞–∫–æ–Ω–Ω–æ üî´ –∏–∑–≥–Ω–∞—Ç—å?',
                                   reply_markup=kb_night_mafia(chat_obj))
            print(f"[{chat_obj.id}] –û—Ç–ø—Ä–∞–≤–∏–ª –Ω–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–Ω—É –º–∞—Ñ–∏–∏ [ ID {chat_obj.don.id}, {chat_obj.don.name} ] ")
        except RetryAfter as e:
            await asyncio.sleep(e.timeout)
        await asyncio.sleep(0.1)


async def mailing_day_messages_to_players(chat_id, chat_obj, bot) -> types.Message:
    for player in chat_obj.players:
        if Kill() not in player.effects:
            try:
                await bot.send_message(player.id,
                                       '–ö–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–≥–Ω–∞—Ç—å?',
                                       reply_markup=kb_voting_time_users(chat_id, chat_obj.players, player))
                print(f'[{chat_obj.id}] –û—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ [ ID {player.id}, {player.name}, {player.role}]')
            except RetryAfter as e:
                await asyncio.sleep(e.timeout)
            await asyncio.sleep(0.1)
    try:
        message_voting: types.Message = await bot.send_message(chat_id,
                                                               '–í—Ä–µ–º—è –¥–Ω–µ–≤–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è! –ö–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–≥–Ω–∞—Ç—å?',
                                                               reply_markup=game_go_to_bot_kb())
        return message_voting
    except RetryAfter as e:
        await asyncio.sleep(e.timeout)
    await asyncio.sleep(0.1)


